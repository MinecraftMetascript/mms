// Code generated from ./grammar/Main_Lexer.g4 by ANTLR 4.13.2. DO NOT EDIT.

package grammar

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type Main_Lexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var Main_LexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func main_lexerLexerInit() {
	staticData := &Main_LexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'namespace'", "'Anchor'", "'Absolute'", "'AboveBottom'", "'BelowTop'",
		"'SurfaceRule'", "'SurfaceCondition'", "'Block'", "'If'", "'Sequence'",
		"'Bandlands'", "'AboveSurface'", "'Biome'", "'Hole'", "'Noise'", "'Steep'",
		"'StoneDepth'", "'Freezing'", "'Temperature'", "'VerticalGradient'",
		"'AboveWater'", "'YAbove'", "'Floor'", "'Ceiling'", "'Not'", "'And'",
		"'Or'", "'Add'", "'Sub'", "':='", "'{'", "'}'", "'['", "']'", "'('",
		"')'", "'.'", "'!'", "','", "':'", "';'", "'&'", "'&&'", "'~'", "'-'",
	}
	staticData.SymbolicNames = []string{
		"", "Keyword_Namespace", "Keyword_Anchor", "Keyword_Absolute", "Keyword_AboveBottom",
		"Keyword_BelowTop", "Keyword_SurfaceRule", "Keyword_SurfaceCondition",
		"Keyword_Block", "Keyword_If", "Keyword_Sequence", "Keyword_Bandlands",
		"Keyword_AboveSurface", "Keyword_Biome", "Keyword_Hole", "Keyword_Noise",
		"Keyword_Steep", "Keyword_StoneDepth", "Keyword_Freezing", "Keyword_Temperature",
		"Keyword_VerticalGradient", "Keyword_AboveWater", "Keyword_YAbove",
		"Keyword_Floor", "Keyword_Ceiling", "Keyword_Not", "Keyword_And", "Keyword_Or",
		"Keyword_Add", "Keyword_Sub", "Operator_Declare", "CurlyOpen", "CurlyClose",
		"SquareOpen", "SquareClose", "RoundOpen", "RoundClose", "Dot", "Bang",
		"Comma", "Colon", "SemiColon", "Amp", "DoubleAmp", "Tilde", "Dash",
		"Int", "Float", "String", "NL", "WS", "Identifier", "BlockComment",
		"LineComment",
	}
	staticData.RuleNames = []string{
		"Keyword_Namespace", "Keyword_Anchor", "Keyword_Absolute", "Keyword_AboveBottom",
		"Keyword_BelowTop", "Keyword_SurfaceRule", "Keyword_SurfaceCondition",
		"Keyword_Block", "Keyword_If", "Keyword_Sequence", "Keyword_Bandlands",
		"Keyword_AboveSurface", "Keyword_Biome", "Keyword_Hole", "Keyword_Noise",
		"Keyword_Steep", "Keyword_StoneDepth", "Keyword_Freezing", "Keyword_Temperature",
		"Keyword_VerticalGradient", "Keyword_AboveWater", "Keyword_YAbove",
		"Keyword_Floor", "Keyword_Ceiling", "Keyword_Not", "Keyword_And", "Keyword_Or",
		"Keyword_Add", "Keyword_Sub", "Operator_Declare", "CurlyOpen", "CurlyClose",
		"SquareOpen", "SquareClose", "RoundOpen", "RoundClose", "Dot", "Bang",
		"Comma", "Colon", "SemiColon", "Amp", "DoubleAmp", "Tilde", "Dash",
		"Int", "Float", "String", "NL", "WS", "Identifier", "BlockComment",
		"LineComment",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 53, 453, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
		1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7,
		1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1,
		26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29,
		1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1,
		34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39,
		1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1,
		44, 1, 44, 1, 45, 3, 45, 383, 8, 45, 1, 45, 4, 45, 386, 8, 45, 11, 45,
		12, 45, 387, 1, 46, 3, 46, 391, 8, 46, 1, 46, 4, 46, 394, 8, 46, 11, 46,
		12, 46, 395, 1, 46, 1, 46, 4, 46, 400, 8, 46, 11, 46, 12, 46, 401, 1, 47,
		1, 47, 5, 47, 406, 8, 47, 10, 47, 12, 47, 409, 9, 47, 1, 47, 1, 47, 1,
		48, 1, 48, 1, 49, 4, 49, 416, 8, 49, 11, 49, 12, 49, 417, 1, 49, 1, 49,
		1, 50, 1, 50, 5, 50, 424, 8, 50, 10, 50, 12, 50, 427, 9, 50, 1, 51, 1,
		51, 1, 51, 1, 51, 5, 51, 433, 8, 51, 10, 51, 12, 51, 436, 9, 51, 1, 51,
		1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 52, 5, 52, 447, 8,
		52, 10, 52, 12, 52, 450, 9, 52, 1, 52, 1, 52, 1, 434, 0, 53, 1, 1, 3, 2,
		5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61,
		31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79,
		40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97,
		49, 99, 50, 101, 51, 103, 52, 105, 53, 1, 0, 6, 1, 0, 48, 57, 2, 0, 10,
		10, 13, 13, 1, 0, 10, 10, 2, 0, 9, 9, 32, 32, 2, 0, 65, 90, 97, 122, 4,
		0, 48, 57, 65, 90, 95, 95, 97, 122, 462, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0,
		0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0,
		0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1,
		0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27,
		1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0,
		35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0,
		0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0,
		0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0,
		0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1,
		0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73,
		1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0,
		81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0,
		0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0,
		0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1,
		0, 0, 0, 0, 105, 1, 0, 0, 0, 1, 107, 1, 0, 0, 0, 3, 117, 1, 0, 0, 0, 5,
		124, 1, 0, 0, 0, 7, 133, 1, 0, 0, 0, 9, 145, 1, 0, 0, 0, 11, 154, 1, 0,
		0, 0, 13, 166, 1, 0, 0, 0, 15, 183, 1, 0, 0, 0, 17, 189, 1, 0, 0, 0, 19,
		192, 1, 0, 0, 0, 21, 201, 1, 0, 0, 0, 23, 211, 1, 0, 0, 0, 25, 224, 1,
		0, 0, 0, 27, 230, 1, 0, 0, 0, 29, 235, 1, 0, 0, 0, 31, 241, 1, 0, 0, 0,
		33, 247, 1, 0, 0, 0, 35, 258, 1, 0, 0, 0, 37, 267, 1, 0, 0, 0, 39, 279,
		1, 0, 0, 0, 41, 296, 1, 0, 0, 0, 43, 307, 1, 0, 0, 0, 45, 314, 1, 0, 0,
		0, 47, 320, 1, 0, 0, 0, 49, 328, 1, 0, 0, 0, 51, 332, 1, 0, 0, 0, 53, 336,
		1, 0, 0, 0, 55, 339, 1, 0, 0, 0, 57, 343, 1, 0, 0, 0, 59, 347, 1, 0, 0,
		0, 61, 350, 1, 0, 0, 0, 63, 352, 1, 0, 0, 0, 65, 354, 1, 0, 0, 0, 67, 356,
		1, 0, 0, 0, 69, 358, 1, 0, 0, 0, 71, 360, 1, 0, 0, 0, 73, 362, 1, 0, 0,
		0, 75, 364, 1, 0, 0, 0, 77, 366, 1, 0, 0, 0, 79, 368, 1, 0, 0, 0, 81, 370,
		1, 0, 0, 0, 83, 372, 1, 0, 0, 0, 85, 374, 1, 0, 0, 0, 87, 377, 1, 0, 0,
		0, 89, 379, 1, 0, 0, 0, 91, 382, 1, 0, 0, 0, 93, 390, 1, 0, 0, 0, 95, 403,
		1, 0, 0, 0, 97, 412, 1, 0, 0, 0, 99, 415, 1, 0, 0, 0, 101, 421, 1, 0, 0,
		0, 103, 428, 1, 0, 0, 0, 105, 442, 1, 0, 0, 0, 107, 108, 5, 110, 0, 0,
		108, 109, 5, 97, 0, 0, 109, 110, 5, 109, 0, 0, 110, 111, 5, 101, 0, 0,
		111, 112, 5, 115, 0, 0, 112, 113, 5, 112, 0, 0, 113, 114, 5, 97, 0, 0,
		114, 115, 5, 99, 0, 0, 115, 116, 5, 101, 0, 0, 116, 2, 1, 0, 0, 0, 117,
		118, 5, 65, 0, 0, 118, 119, 5, 110, 0, 0, 119, 120, 5, 99, 0, 0, 120, 121,
		5, 104, 0, 0, 121, 122, 5, 111, 0, 0, 122, 123, 5, 114, 0, 0, 123, 4, 1,
		0, 0, 0, 124, 125, 5, 65, 0, 0, 125, 126, 5, 98, 0, 0, 126, 127, 5, 115,
		0, 0, 127, 128, 5, 111, 0, 0, 128, 129, 5, 108, 0, 0, 129, 130, 5, 117,
		0, 0, 130, 131, 5, 116, 0, 0, 131, 132, 5, 101, 0, 0, 132, 6, 1, 0, 0,
		0, 133, 134, 5, 65, 0, 0, 134, 135, 5, 98, 0, 0, 135, 136, 5, 111, 0, 0,
		136, 137, 5, 118, 0, 0, 137, 138, 5, 101, 0, 0, 138, 139, 5, 66, 0, 0,
		139, 140, 5, 111, 0, 0, 140, 141, 5, 116, 0, 0, 141, 142, 5, 116, 0, 0,
		142, 143, 5, 111, 0, 0, 143, 144, 5, 109, 0, 0, 144, 8, 1, 0, 0, 0, 145,
		146, 5, 66, 0, 0, 146, 147, 5, 101, 0, 0, 147, 148, 5, 108, 0, 0, 148,
		149, 5, 111, 0, 0, 149, 150, 5, 119, 0, 0, 150, 151, 5, 84, 0, 0, 151,
		152, 5, 111, 0, 0, 152, 153, 5, 112, 0, 0, 153, 10, 1, 0, 0, 0, 154, 155,
		5, 83, 0, 0, 155, 156, 5, 117, 0, 0, 156, 157, 5, 114, 0, 0, 157, 158,
		5, 102, 0, 0, 158, 159, 5, 97, 0, 0, 159, 160, 5, 99, 0, 0, 160, 161, 5,
		101, 0, 0, 161, 162, 5, 82, 0, 0, 162, 163, 5, 117, 0, 0, 163, 164, 5,
		108, 0, 0, 164, 165, 5, 101, 0, 0, 165, 12, 1, 0, 0, 0, 166, 167, 5, 83,
		0, 0, 167, 168, 5, 117, 0, 0, 168, 169, 5, 114, 0, 0, 169, 170, 5, 102,
		0, 0, 170, 171, 5, 97, 0, 0, 171, 172, 5, 99, 0, 0, 172, 173, 5, 101, 0,
		0, 173, 174, 5, 67, 0, 0, 174, 175, 5, 111, 0, 0, 175, 176, 5, 110, 0,
		0, 176, 177, 5, 100, 0, 0, 177, 178, 5, 105, 0, 0, 178, 179, 5, 116, 0,
		0, 179, 180, 5, 105, 0, 0, 180, 181, 5, 111, 0, 0, 181, 182, 5, 110, 0,
		0, 182, 14, 1, 0, 0, 0, 183, 184, 5, 66, 0, 0, 184, 185, 5, 108, 0, 0,
		185, 186, 5, 111, 0, 0, 186, 187, 5, 99, 0, 0, 187, 188, 5, 107, 0, 0,
		188, 16, 1, 0, 0, 0, 189, 190, 5, 73, 0, 0, 190, 191, 5, 102, 0, 0, 191,
		18, 1, 0, 0, 0, 192, 193, 5, 83, 0, 0, 193, 194, 5, 101, 0, 0, 194, 195,
		5, 113, 0, 0, 195, 196, 5, 117, 0, 0, 196, 197, 5, 101, 0, 0, 197, 198,
		5, 110, 0, 0, 198, 199, 5, 99, 0, 0, 199, 200, 5, 101, 0, 0, 200, 20, 1,
		0, 0, 0, 201, 202, 5, 66, 0, 0, 202, 203, 5, 97, 0, 0, 203, 204, 5, 110,
		0, 0, 204, 205, 5, 100, 0, 0, 205, 206, 5, 108, 0, 0, 206, 207, 5, 97,
		0, 0, 207, 208, 5, 110, 0, 0, 208, 209, 5, 100, 0, 0, 209, 210, 5, 115,
		0, 0, 210, 22, 1, 0, 0, 0, 211, 212, 5, 65, 0, 0, 212, 213, 5, 98, 0, 0,
		213, 214, 5, 111, 0, 0, 214, 215, 5, 118, 0, 0, 215, 216, 5, 101, 0, 0,
		216, 217, 5, 83, 0, 0, 217, 218, 5, 117, 0, 0, 218, 219, 5, 114, 0, 0,
		219, 220, 5, 102, 0, 0, 220, 221, 5, 97, 0, 0, 221, 222, 5, 99, 0, 0, 222,
		223, 5, 101, 0, 0, 223, 24, 1, 0, 0, 0, 224, 225, 5, 66, 0, 0, 225, 226,
		5, 105, 0, 0, 226, 227, 5, 111, 0, 0, 227, 228, 5, 109, 0, 0, 228, 229,
		5, 101, 0, 0, 229, 26, 1, 0, 0, 0, 230, 231, 5, 72, 0, 0, 231, 232, 5,
		111, 0, 0, 232, 233, 5, 108, 0, 0, 233, 234, 5, 101, 0, 0, 234, 28, 1,
		0, 0, 0, 235, 236, 5, 78, 0, 0, 236, 237, 5, 111, 0, 0, 237, 238, 5, 105,
		0, 0, 238, 239, 5, 115, 0, 0, 239, 240, 5, 101, 0, 0, 240, 30, 1, 0, 0,
		0, 241, 242, 5, 83, 0, 0, 242, 243, 5, 116, 0, 0, 243, 244, 5, 101, 0,
		0, 244, 245, 5, 101, 0, 0, 245, 246, 5, 112, 0, 0, 246, 32, 1, 0, 0, 0,
		247, 248, 5, 83, 0, 0, 248, 249, 5, 116, 0, 0, 249, 250, 5, 111, 0, 0,
		250, 251, 5, 110, 0, 0, 251, 252, 5, 101, 0, 0, 252, 253, 5, 68, 0, 0,
		253, 254, 5, 101, 0, 0, 254, 255, 5, 112, 0, 0, 255, 256, 5, 116, 0, 0,
		256, 257, 5, 104, 0, 0, 257, 34, 1, 0, 0, 0, 258, 259, 5, 70, 0, 0, 259,
		260, 5, 114, 0, 0, 260, 261, 5, 101, 0, 0, 261, 262, 5, 101, 0, 0, 262,
		263, 5, 122, 0, 0, 263, 264, 5, 105, 0, 0, 264, 265, 5, 110, 0, 0, 265,
		266, 5, 103, 0, 0, 266, 36, 1, 0, 0, 0, 267, 268, 5, 84, 0, 0, 268, 269,
		5, 101, 0, 0, 269, 270, 5, 109, 0, 0, 270, 271, 5, 112, 0, 0, 271, 272,
		5, 101, 0, 0, 272, 273, 5, 114, 0, 0, 273, 274, 5, 97, 0, 0, 274, 275,
		5, 116, 0, 0, 275, 276, 5, 117, 0, 0, 276, 277, 5, 114, 0, 0, 277, 278,
		5, 101, 0, 0, 278, 38, 1, 0, 0, 0, 279, 280, 5, 86, 0, 0, 280, 281, 5,
		101, 0, 0, 281, 282, 5, 114, 0, 0, 282, 283, 5, 116, 0, 0, 283, 284, 5,
		105, 0, 0, 284, 285, 5, 99, 0, 0, 285, 286, 5, 97, 0, 0, 286, 287, 5, 108,
		0, 0, 287, 288, 5, 71, 0, 0, 288, 289, 5, 114, 0, 0, 289, 290, 5, 97, 0,
		0, 290, 291, 5, 100, 0, 0, 291, 292, 5, 105, 0, 0, 292, 293, 5, 101, 0,
		0, 293, 294, 5, 110, 0, 0, 294, 295, 5, 116, 0, 0, 295, 40, 1, 0, 0, 0,
		296, 297, 5, 65, 0, 0, 297, 298, 5, 98, 0, 0, 298, 299, 5, 111, 0, 0, 299,
		300, 5, 118, 0, 0, 300, 301, 5, 101, 0, 0, 301, 302, 5, 87, 0, 0, 302,
		303, 5, 97, 0, 0, 303, 304, 5, 116, 0, 0, 304, 305, 5, 101, 0, 0, 305,
		306, 5, 114, 0, 0, 306, 42, 1, 0, 0, 0, 307, 308, 5, 89, 0, 0, 308, 309,
		5, 65, 0, 0, 309, 310, 5, 98, 0, 0, 310, 311, 5, 111, 0, 0, 311, 312, 5,
		118, 0, 0, 312, 313, 5, 101, 0, 0, 313, 44, 1, 0, 0, 0, 314, 315, 5, 70,
		0, 0, 315, 316, 5, 108, 0, 0, 316, 317, 5, 111, 0, 0, 317, 318, 5, 111,
		0, 0, 318, 319, 5, 114, 0, 0, 319, 46, 1, 0, 0, 0, 320, 321, 5, 67, 0,
		0, 321, 322, 5, 101, 0, 0, 322, 323, 5, 105, 0, 0, 323, 324, 5, 108, 0,
		0, 324, 325, 5, 105, 0, 0, 325, 326, 5, 110, 0, 0, 326, 327, 5, 103, 0,
		0, 327, 48, 1, 0, 0, 0, 328, 329, 5, 78, 0, 0, 329, 330, 5, 111, 0, 0,
		330, 331, 5, 116, 0, 0, 331, 50, 1, 0, 0, 0, 332, 333, 5, 65, 0, 0, 333,
		334, 5, 110, 0, 0, 334, 335, 5, 100, 0, 0, 335, 52, 1, 0, 0, 0, 336, 337,
		5, 79, 0, 0, 337, 338, 5, 114, 0, 0, 338, 54, 1, 0, 0, 0, 339, 340, 5,
		65, 0, 0, 340, 341, 5, 100, 0, 0, 341, 342, 5, 100, 0, 0, 342, 56, 1, 0,
		0, 0, 343, 344, 5, 83, 0, 0, 344, 345, 5, 117, 0, 0, 345, 346, 5, 98, 0,
		0, 346, 58, 1, 0, 0, 0, 347, 348, 5, 58, 0, 0, 348, 349, 5, 61, 0, 0, 349,
		60, 1, 0, 0, 0, 350, 351, 5, 123, 0, 0, 351, 62, 1, 0, 0, 0, 352, 353,
		5, 125, 0, 0, 353, 64, 1, 0, 0, 0, 354, 355, 5, 91, 0, 0, 355, 66, 1, 0,
		0, 0, 356, 357, 5, 93, 0, 0, 357, 68, 1, 0, 0, 0, 358, 359, 5, 40, 0, 0,
		359, 70, 1, 0, 0, 0, 360, 361, 5, 41, 0, 0, 361, 72, 1, 0, 0, 0, 362, 363,
		5, 46, 0, 0, 363, 74, 1, 0, 0, 0, 364, 365, 5, 33, 0, 0, 365, 76, 1, 0,
		0, 0, 366, 367, 5, 44, 0, 0, 367, 78, 1, 0, 0, 0, 368, 369, 5, 58, 0, 0,
		369, 80, 1, 0, 0, 0, 370, 371, 5, 59, 0, 0, 371, 82, 1, 0, 0, 0, 372, 373,
		5, 38, 0, 0, 373, 84, 1, 0, 0, 0, 374, 375, 5, 38, 0, 0, 375, 376, 5, 38,
		0, 0, 376, 86, 1, 0, 0, 0, 377, 378, 5, 126, 0, 0, 378, 88, 1, 0, 0, 0,
		379, 380, 5, 45, 0, 0, 380, 90, 1, 0, 0, 0, 381, 383, 5, 45, 0, 0, 382,
		381, 1, 0, 0, 0, 382, 383, 1, 0, 0, 0, 383, 385, 1, 0, 0, 0, 384, 386,
		7, 0, 0, 0, 385, 384, 1, 0, 0, 0, 386, 387, 1, 0, 0, 0, 387, 385, 1, 0,
		0, 0, 387, 388, 1, 0, 0, 0, 388, 92, 1, 0, 0, 0, 389, 391, 5, 45, 0, 0,
		390, 389, 1, 0, 0, 0, 390, 391, 1, 0, 0, 0, 391, 393, 1, 0, 0, 0, 392,
		394, 7, 0, 0, 0, 393, 392, 1, 0, 0, 0, 394, 395, 1, 0, 0, 0, 395, 393,
		1, 0, 0, 0, 395, 396, 1, 0, 0, 0, 396, 397, 1, 0, 0, 0, 397, 399, 5, 46,
		0, 0, 398, 400, 7, 0, 0, 0, 399, 398, 1, 0, 0, 0, 400, 401, 1, 0, 0, 0,
		401, 399, 1, 0, 0, 0, 401, 402, 1, 0, 0, 0, 402, 94, 1, 0, 0, 0, 403, 407,
		5, 34, 0, 0, 404, 406, 8, 1, 0, 0, 405, 404, 1, 0, 0, 0, 406, 409, 1, 0,
		0, 0, 407, 405, 1, 0, 0, 0, 407, 408, 1, 0, 0, 0, 408, 410, 1, 0, 0, 0,
		409, 407, 1, 0, 0, 0, 410, 411, 5, 34, 0, 0, 411, 96, 1, 0, 0, 0, 412,
		413, 7, 2, 0, 0, 413, 98, 1, 0, 0, 0, 414, 416, 7, 3, 0, 0, 415, 414, 1,
		0, 0, 0, 416, 417, 1, 0, 0, 0, 417, 415, 1, 0, 0, 0, 417, 418, 1, 0, 0,
		0, 418, 419, 1, 0, 0, 0, 419, 420, 6, 49, 0, 0, 420, 100, 1, 0, 0, 0, 421,
		425, 7, 4, 0, 0, 422, 424, 7, 5, 0, 0, 423, 422, 1, 0, 0, 0, 424, 427,
		1, 0, 0, 0, 425, 423, 1, 0, 0, 0, 425, 426, 1, 0, 0, 0, 426, 102, 1, 0,
		0, 0, 427, 425, 1, 0, 0, 0, 428, 429, 5, 47, 0, 0, 429, 430, 5, 42, 0,
		0, 430, 434, 1, 0, 0, 0, 431, 433, 9, 0, 0, 0, 432, 431, 1, 0, 0, 0, 433,
		436, 1, 0, 0, 0, 434, 435, 1, 0, 0, 0, 434, 432, 1, 0, 0, 0, 435, 437,
		1, 0, 0, 0, 436, 434, 1, 0, 0, 0, 437, 438, 5, 42, 0, 0, 438, 439, 5, 47,
		0, 0, 439, 440, 1, 0, 0, 0, 440, 441, 6, 51, 1, 0, 441, 104, 1, 0, 0, 0,
		442, 443, 5, 47, 0, 0, 443, 444, 5, 47, 0, 0, 444, 448, 1, 0, 0, 0, 445,
		447, 8, 1, 0, 0, 446, 445, 1, 0, 0, 0, 447, 450, 1, 0, 0, 0, 448, 446,
		1, 0, 0, 0, 448, 449, 1, 0, 0, 0, 449, 451, 1, 0, 0, 0, 450, 448, 1, 0,
		0, 0, 451, 452, 6, 52, 1, 0, 452, 106, 1, 0, 0, 0, 11, 0, 382, 387, 390,
		395, 401, 407, 417, 425, 434, 448, 2, 6, 0, 0, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// Main_LexerInit initializes any static state used to implement Main_Lexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewMain_Lexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func Main_LexerInit() {
	staticData := &Main_LexerLexerStaticData
	staticData.once.Do(main_lexerLexerInit)
}

// NewMain_Lexer produces a new lexer instance for the optional input antlr.CharStream.
func NewMain_Lexer(input antlr.CharStream) *Main_Lexer {
	Main_LexerInit()
	l := new(Main_Lexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &Main_LexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Main_Lexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// Main_Lexer tokens.
const (
	Main_LexerKeyword_Namespace        = 1
	Main_LexerKeyword_Anchor           = 2
	Main_LexerKeyword_Absolute         = 3
	Main_LexerKeyword_AboveBottom      = 4
	Main_LexerKeyword_BelowTop         = 5
	Main_LexerKeyword_SurfaceRule      = 6
	Main_LexerKeyword_SurfaceCondition = 7
	Main_LexerKeyword_Block            = 8
	Main_LexerKeyword_If               = 9
	Main_LexerKeyword_Sequence         = 10
	Main_LexerKeyword_Bandlands        = 11
	Main_LexerKeyword_AboveSurface     = 12
	Main_LexerKeyword_Biome            = 13
	Main_LexerKeyword_Hole             = 14
	Main_LexerKeyword_Noise            = 15
	Main_LexerKeyword_Steep            = 16
	Main_LexerKeyword_StoneDepth       = 17
	Main_LexerKeyword_Freezing         = 18
	Main_LexerKeyword_Temperature      = 19
	Main_LexerKeyword_VerticalGradient = 20
	Main_LexerKeyword_AboveWater       = 21
	Main_LexerKeyword_YAbove           = 22
	Main_LexerKeyword_Floor            = 23
	Main_LexerKeyword_Ceiling          = 24
	Main_LexerKeyword_Not              = 25
	Main_LexerKeyword_And              = 26
	Main_LexerKeyword_Or               = 27
	Main_LexerKeyword_Add              = 28
	Main_LexerKeyword_Sub              = 29
	Main_LexerOperator_Declare         = 30
	Main_LexerCurlyOpen                = 31
	Main_LexerCurlyClose               = 32
	Main_LexerSquareOpen               = 33
	Main_LexerSquareClose              = 34
	Main_LexerRoundOpen                = 35
	Main_LexerRoundClose               = 36
	Main_LexerDot                      = 37
	Main_LexerBang                     = 38
	Main_LexerComma                    = 39
	Main_LexerColon                    = 40
	Main_LexerSemiColon                = 41
	Main_LexerAmp                      = 42
	Main_LexerDoubleAmp                = 43
	Main_LexerTilde                    = 44
	Main_LexerDash                     = 45
	Main_LexerInt                      = 46
	Main_LexerFloat                    = 47
	Main_LexerString_                  = 48
	Main_LexerNL                       = 49
	Main_LexerWS                       = 50
	Main_LexerIdentifier               = 51
	Main_LexerBlockComment             = 52
	Main_LexerLineComment              = 53
)
